// <auto-generated />
using DBEcomSur;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DBEcomSur.Migrations
{
    [DbContext(typeof(BDEcomSurContext))]
    partial class BDEcomSurContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DBEcomSur.BDProducto", b =>
                {
                    b.Property<int>("fiProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fiProductoId"));

                    b.Property<int>("fcProducto")
                        .HasColumnType("int");

                    b.Property<double>("fdPrecio")
                        .HasColumnType("float");

                    b.Property<int>("fiCantidadProducto")
                        .HasColumnType("int");

                    b.HasKey("fiProductoId");

                    b.ToTable("BDProductos");
                });

            modelBuilder.Entity("DBEcomSur.BDUsuario", b =>
                {
                    b.Property<int>("fiUsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fiUsuarioId"));

                    b.Property<string>("fcAmaterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fcApaterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fcCalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fcColonia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fcFechaCreacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fcNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fcNumero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("fiUsuarioId");

                    b.ToTable("BDUsuarios");
                });

            modelBuilder.Entity("DBEcomSur.BDVenta", b =>
                {
                    b.Property<int>("fiVentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fiVentaId"));

                    b.Property<int>("cantidaCompr")
                        .HasColumnType("int");

                    b.Property<string>("fcFechaCompra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("fiProductoId")
                        .HasColumnType("int");

                    b.Property<int>("fiUsuarioId")
                        .HasColumnType("int");

                    b.HasKey("fiVentaId");

                    b.HasIndex("fiProductoId");

                    b.HasIndex("fiUsuarioId");

                    b.ToTable("BDVentas");
                });

            modelBuilder.Entity("DBEcomSur.BDVenta", b =>
                {
                    b.HasOne("DBEcomSur.BDProducto", "BDProducto")
                        .WithMany()
                        .HasForeignKey("fiProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBEcomSur.BDUsuario", "BDUsuario")
                        .WithMany()
                        .HasForeignKey("fiUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BDProducto");

                    b.Navigation("BDUsuario");
                });
#pragma warning restore 612, 618
        }
    }
}
